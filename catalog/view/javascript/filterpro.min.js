var fIID   = 0;
var interval       = 1;
var container   = "";
var history_hash = "";
jQuery.fn.exists = function(){return this.length > 0}
/**
 * fixs for IE
 */
if (!Array.prototype.indexOf) {
    Array.prototype.indexOf = function(obj, start) {
        for (var i = (start || 0), j = this.length; i < j; i++) {
            if (this[i] === obj) {
                return i;
            }
        }
        return -1;
    }
}

function escapeHtml(text) {
  return text
      .replace(/&/g, "&amp;")
      .replace(/</g, "&lt;")
      .replace(/>/g, "&gt;")
      .replace(/"/g, "&quot;");
}

String.prototype.hashCode = function(){
    var hash = 0, i, ch;
    if (this.length == 0) return hash;
    for (i = 0; i < this.length; i++) {
        ch = this.charCodeAt(i);
        hash = ((hash<<5)-hash)+ch;
        hash = hash & hash; // Convert to 32bit integer
    }
    return hash;
};

$(document).on('change', '.price_limit', (function () {
    var b = parseInt($("#min_price").val());
    var a = parseInt($("#max_price").val());
    $("#slider-range").slider("values", [b, a]);
    iF()
}));

function synchronizeImgCheckboxes() {
    $("#filterpro input.filtered[type=\"checkbox\"]").each(function() {
        var $img = $(this).next('img');
        if ($img.exists()) {
            if ($(this).is(":checked")) {
                $img.addClass("selected");
            } else {
                $img.removeClass("selected");
            }
        }
    });
}
$(document).on('change', '#filterpro .filtered', (function () {
    iF();
}));
$(function () {
    $("#slider-range").slider({range:true,min:0,max:0,values:[0, 0],stop:function (a, b) {
        iF()
    }, slide:function (a, b) {
            $("#min_price").val(b.values[0]);
            $("#max_price").val(b.values[1])
        }});
    $("#min_price").val($("#slider-range").slider("values", 0));
    $("#max_price").val($("#slider-range").slider("values", 1))
});
function iF() {
    clearTimeout(fIID);
    $("#filterpro_page").val(1);
    fIID = setTimeout("doFilter(false)", interval)
}

function success(g, b) {
    var cont = getCont();
    var view = 'product-layout';

    var hash = window.location.hash.substr(1);
    if (g.result_html) {
        $(cont).parent().html(g.result_html);
        if (localStorage.getItem('display') == 'list') {
            $('#list-view').trigger('click');
        } else {
            $('#grid-view').trigger('click');
        }
    }
    if (g.pagination){
        $('.col-sm-6.text-left').parent().html(g.pagination);
    }

        if (b && g.min_price == g.max_price) {
            $('.price_slider').hide();
        }
    var d = parseInt(g.min_price);
    var c = Math.ceil(parseFloat(g.max_price));
    if (b) {
        $("#slider-range").slider("option", {min:d, max:c});
        if ($("#max_price").val() >= 1) {
            d = parseInt($("#min_price").val());
            c = parseInt($("#max_price").val())
        }
        $("#slider-range").slider("option", {values:[d, c]});
        $("#min_price").val(d);
        $("#max_price").val(c)
    }

    if (g.totals_data) {
        var atts = {};
        $.each(g.totals_data.attributes, function(k, v) {
            atts[(v.id + "_" + v.text).replace(/\s/g, '_')] = v.t;
        });

        $('.a_name').each(function (k, v) {
            var at_v_i = $(v).attr('at_v_i').replace(/\s/g, '_');
            var at_v_i_e = escapeHtml(at_v_i);
            if (atts[at_v_i]) {
                $(v).removeAttr("disabled");
            } else {
                $(v).attr("disabled", "disabled");
                $(v).removeAttr('checked');
                $(v).removeAttr(':selected');
            }
        });

        var h = [];
        $.each(g.totals_data.manufacturers, function (f, k) {
            if (k.id) {
                h[h.length] = k.id;
                var j = $("#manufacturer_" + k.id);
                if (j.length == 0) {
                    return;
                }
                j.removeAttr("disabled");
                if (j.get(0).tagName == "OPTION") {
                    j.text($("#m_" + k.id).val())
                } else {
                    $('label[for="manufacturer_' + k.id + '"]').text($("#m_" + k.id).val())
                }
            }
        });
        $(".manufacturer_value").each(function (f, k) {
            var j = $(this);
            var l = j.attr("id").match(/manufacturer_(\d+)/);
            if ($.inArray(l[1], h) < 0) {
                j.attr("disabled", "disabled");
                if (this.tagName == "OPTION") {
                    j.text($("#m_" + l[1]).val());
                    j.prop("selected", false)
                } else {
                    $('label[for="manufacturer_' + l[1] + '"]').text($("#m_" + l[1]).val());
                    j.prop("checked", false)
                }
            }
        });
        var e = [];
        $.each(g.totals_data.options, function (j, k) {
            if (k.id) {
                e[e.length] = k.id;
                var f = $("#option_value_" + k.id);
                if (f.exists()) {
                    f.removeAttr("disabled");
                    if (f.get(0).tagName == "OPTION") {
                        f.text($("#o_" + k.id).val() + " (" + k.t + ")")
                    } else {
                        $('label[for="option_value_' + k.id + '"]').text($("#o_" + k.id).val())
                    }
                }
            }
        });
        $(".option_value").each(function (j, k) {
            var f = $(this);
            var l = f.attr("id").match(/option_value_(\d+)/);
            if ($.inArray(l[1], e) < 0) {
                f.attr("disabled", "disabled");
                if (this.tagName == "OPTION") {
                    f.text($("#o_" + l[1]).val());
                    f.attr("selected", false)
                } else {
                    $('label[for="option_value_' + l[1] + '"]').text($("#o_" + l[1]).val());
                    f.attr("checked", false)
                }
            }
        })
    }
}
function getCont(){
    return '.product-layout';
}

var cache = [];
function doFilter(b) {
    var a = $("#filterpro").serialize().replace(/[^&]+=\.?(?:&|$)/g, "").replace(/&+$/, "");
	a = decodeURIComponent(a);
    if (!b) {
        window.location.hash = history_hash = a
    }
    doFilter2(b, a);
}

function doFilter2(b, a) {
    var h = a.hashCode();
    if (cache[h]){
        success(cache[h]);
    } else {
        var cont = getCont();

        $(cont).loadmask();
        $("#filterpro").loadmask();

        $.ajax({url:"index.php?route=module/filterpro/getproducts", type:"POST", data:a + (b ? "&getPriceLimits=true" : ""), dataType:"json",
            success:function (g) {
                success(g, b);
                cache[h] = g;
                var cont = getCont();
                $(cont).loadunmask();
                $("#filterpro").loadunmask();
            },
            error:function(jqXHR, textStatus, errorThrown) {
                var cont = getCont();
                $(cont).loadunmask();
                $(".filterpro").loadunmask();
            }
        });
    }
}
$(document).ready(function () {
    container = getCont();

    $(".option_box .option_name").click(function () {
        $(this).siblings(".collapsible").toggle();
        $(this).toggleClass("hided")
    });

    $(".option_box .attribute_group_name").click(function () {
        $(this).siblings(".attribute_box").toggle();
        $(this).toggleClass("hided")
    });

    $(".clear_filter").click(function () {
        clear_filter();
        iF();
    });

    function clear_filter() {
        $("#filterpro img").removeClass("selected");
        $("#filterpro select").val("");

        $("#filterpro :input").each(function () {
            if ($(this).is(":checked")) {
                $(this).attr("checked", false)
            }
        });

        var b = $("#slider-range").slider("option", "min");
        var a = $("#slider-range").slider("option", "max");

        $("#slider-range").slider("option", {values:[b, a]});
        $("#min_price").val(b);
        $("#max_price").val(a);

        $("div[id^=slider-range-]").each(function(index, element) {
            var id = this.id.replace(/[^\d]/g, '');
            var b = $(element).slider("option", "min");
            var a = $(element).slider("option", "max");

            hs = $(element).slider();
            hs.slider("option", {values:[b, a]});
            hs.slider("option","slide").call(hs, null, { handle: $(".ui-slider-handle", hs), values:[b, a] });

            $("#attribute_value_"+id+"_min").val('');
            $("#attribute_value_"+id+"_max").val('');

        });

    }

    $(document).on('click', '.col-sm-6.text-left .pagination li a', (function () {
        var a = $(this).attr("href");
        var b = a.match(/page=(\d+)/);
        $("#filterpro_page").val(b[1]);
        doFilter(false);
        var cont = getCont();
        $('html, body').animate({ scrollTop: $(cont).offset().top }, 'slow');
        return false;
    }));

    if($("#input-sort").exists()){
        $("#input-sort").get(0).onchange = null;
        $("#input-sort").change(function () {
            var d = $(this).val();
            var a = gUV(d, "sort");
            var b = gUV(d, "order");
            $("#filterpro_sort").val(a);
            $("#filterpro_order").val(b);
            iF()
        });
    }

    if ($("#input-limit").exists()) {
        $("#input-limit").get(0).onchange = null;
        $("#input-limit").change(function () {
            $("#filterpro_limit").val(gUV($(this).val(), "limit"));
            iF()
        });
    }

    // deserialize
    var hash = window.location.hash.substr(1);
	history_hash = hash;

    if (hash && $('instock').is(':visible') && $('instock').is(':checked')) {
        $('instock').attr("checked", false);
    }

    $("#filterpro").deserialize(hash);

    synchronizeImgCheckboxes();

    $("#filterpro img").bind("click", function() {
        var $input = $(this).prev("input");
        if ($input.attr("disabled")) {
            return;
        }
        $(this).toggleClass("selected");
        $input.prop('checked', !$input.prop('checked'));
        iF();
    });

    $("div[id^=slider-range-]").each(function(index, element) {

        var id = this.id.replace(/[^\d]/g, '');
        var arr = window['attr_arr_'+id];

        var b = parseInt($("#attribute_value_"+id+"_min").val());
        var a = parseInt($("#attribute_value_"+id+"_max").val());
        b = arr.indexOf(b);
        a = arr.indexOf(a);
        if (a >= 0 && b >= 0){
            hs = $(element).slider();
            hs.slider("option", {values:[b, a]});
            hs.slider("option","slide").call(hs, null, { handle: $(".ui-slider-handle", hs), values:[b, a] });
        }
    });

    if ($(".sort select").exists()) {
        if ($("#filterpro_sort").val()) {
            $(".sort select option").each(function(i, e) {
                if (gUV($(this).val(), "sort") == $("#filterpro_sort").val() && gUV($(this).val(), "order") == $("#filterpro_order").val()) {
                    $(".sort select").val($(this).val());
                    return;
                }
            });
        } else {
            $val = $(".sort select").val();
            $("#filterpro_sort").val(gUV($val, "sort"));
            $("#filterpro_order").val(gUV($val, "order"))
        }
    }
    if ($("#filterpro_limit").exists()) {
        if ($("#filterpro_limit").val()) {
            $(".limit select").val($("#filterpro_limit").val());
        } else {
            $("#filterpro_limit").val(gUV($(".limit select").val(), "limit"));
        }
    }

    doFilter(true);

    window.onpopstate = function (e) {
        var hash = window.location.hash.substr(1);
        if (hash != history_hash) {
            clear_filter();
            $("#filterpro").deserialize(hash);

            window_hash = false;
            doFilter2(false, hash ? hash : decodeURIComponent($("#filterpro").serialize().replace(/[^&]+=\.?(?:&|$)/g, "").replace(/&+$/, "")));
            history_hash = hash;
            window_hash = true;
        }
    }
});
function gUV(e,f){var c=String(e).split("?");var a="";if(c[1]){var b=c[1].split("&");for(var g=0;g<=(b.length);g++){if(b[g]){var d=b[g].split("=");if(d[0]&&d[0]==f){a=d[1]}}}}return a}
(function(f){var g=Array.prototype.push,rcheck=/^(radio|checkbox)$/i,rselect=/^(option|select-one|select-multiple)$/i,rplus=/\+/g,rvalue=/^(hidden|text|search|tel|url|email|password|datetime|date|month|week|time|datetime-local|number|range|color|submit|image|reset|button|textarea)$/i;f.fn.extend({deserialize:function(a,b){if(!this.length||!a){return this}var i,length,elements=this[0].elements||this.find(":input").get(),normalized=[];if(!elements){return this}if(f.isArray(a)){normalized=a}else if(f.isPlainObject(a)){var c,value;for(c in a){f.isArray(value=a[c])?g.apply(normalized,f.map(value,function(v){return{name:c,value:v}})):g.call(normalized,{name:c,value:value})}}else if(typeof a==="string"){var d;a=a.split("&");for(i=0,length=a.length;i<length;i++){d=a[i].split("=");g.call(normalized,{name:decodeURIComponent(d[0]),value:decodeURIComponent(d[1].replace(rplus,"%20"))})}}if(!(length=normalized.length)){return this}var e,element,item,j,len,property,type;for(i=0;i<length;i++){e=normalized[i];if(!(element=elements[e.name])){continue}type=(len=element.length)?element[0]:element;type=type.type||type.nodeName;property=null;if(rvalue.test(type)){property="value"}else if(rcheck.test(type)){property="checked"}else if(rselect.test(type)){property="selected"}if(len){for(j=0;j<len;j++){item=element[j];if(item.value==e.value){item[property]=true}}}else{element[property]=e.value}}if(f.isFunction(b)){b.call(this)}return this}})})(jQuery);
(function(a){a.fn.loadmask=function(c,b){a(this).each(function(){if(b!==undefined&&b>0){var d=a(this);d.data("_mask_timeout",setTimeout(function(){a.maskElement(d,c)},b))}else{a.maskElement(a(this),c)}})};a.fn.loadunmask=function(){a(this).each(function(){a.unmaskElement(a(this))})};a.fn.isMasked=function(){return this.hasClass("masked")};a.maskElement=function(d,c){if(d.data("_mask_timeout")!==undefined){clearTimeout(d.data("_mask_timeout"));d.removeData("_mask_timeout")}if(d.isMasked()){a.unmaskElement(d)}if(d.css("position")=="static"){d.addClass("masked-relative")}d.addClass("masked");var e=a('<div class="loadmask"></div>');if(navigator.userAgent.toLowerCase().indexOf("msie")>-1){e.height(d.height()+parseInt(d.css("padding-top"))+parseInt(d.css("padding-bottom")));e.width(d.width()+parseInt(d.css("padding-left"))+parseInt(d.css("padding-right")))}if(navigator.userAgent.toLowerCase().indexOf("msie 6")>-1){d.find("select").addClass("masked-hidden")}d.append(e);if(c!==undefined){var b=a('<div class="loadmask-msg" style="display:none;"></div>');b.append("<div>"+c+"</div>");d.append(b);b.css("top",Math.round(d.height()/2-(b.height()-parseInt(b.css("padding-top"))-parseInt(b.css("padding-bottom")))/2)+"px");b.css("left",Math.round(d.width()/2-(b.width()-parseInt(b.css("padding-left"))-parseInt(b.css("padding-right")))/2)+"px");b.show()}};a.unmaskElement=function(b){if(b.data("_mask_timeout")!==undefined){clearTimeout(b.data("_mask_timeout"));b.removeData("_mask_timeout")}b.find(".loadmask-msg,.loadmask").remove();b.removeClass("masked");b.removeClass("masked-relative");b.find("select").removeClass("masked-hidden")}})(jQuery);